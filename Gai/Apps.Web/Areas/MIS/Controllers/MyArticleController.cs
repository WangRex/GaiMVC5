//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//	   生成时间 2013-04-25 15:26:22 by HD
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using Microsoft.Practices.Unity;
using Apps.BLL;
using Apps.Common;
using Apps.Models;
using Apps.Models.MIS;
using Apps.Web.Core;

using Apps.BLL.MIS;
using Apps.Locale;
using System;

namespace Apps.Web.Areas.MIS.Controllers
{
    public class MyArticleController : BaseController
    {
        /// <summary>
        /// 业务层注入
        /// </summary>

        public MIS_ArticleBLL m_BLL = new MIS_ArticleBLL();


        public MIS_Article_CategoryBLL categoryBLL = new MIS_Article_CategoryBLL();
        ValidationErrors errors = new ValidationErrors();

        /// <summary>
        /// 主页
        /// </summary>
        /// <returns>视图</returns>
        [SupportFilter]
        public ActionResult Index()
        {
            
            return View();

        }

        /// <summary>
        /// 获取列表
        /// </summary>
        /// <param name="pager">分页</param>
        /// <param name="queryStr">查询条件</param>
        /// <returns></returns>
        [HttpPost]
        [SupportFilter(ActionName = "Index")]
        public JsonResult GetList(GridPager pager, string queryStr, int checkFlag = 1)
        {
            List<MIS_Article> list = m_BLL.GetList(ref pager, queryStr, "", false, GetUserId(), checkFlag);
            var json = new
            {
                total = pager.totalRows,
                rows = (from r in list
                        select new MIS_Article()
                        {

                            Id = r.Id,
                            ChannelId = r.ChannelId,
                            CategoryId = r.CategoryId,
                            CategoryName = r.CategoryName,
                            Title = r.Title,
                            ImgUrl =r.ImgUrl,
                            //BodyContent = r.BodyContent,
                            Sort = r.Sort,
                            Click = r.Click,
                            CheckFlag = r.CheckFlag,
                            Checker = r.Checker,
                            CheckerName = r.CheckerName,
                            CheckDateTime = r.CheckDateTime,
                            Creater = r.Creater,
                            CreaterName = r.CreaterName,
                            CreateTime = r.CreateTime,
                            IsType = r.IsType
                        }).ToArray()

            };

            return Json(json);
        }

        #region 创建
        [SupportFilter]
        public ActionResult Create()
        {
            
            ViewBag.Category = new SelectList(categoryBLL.m_Rep.FindList(a => a.ParentId == "0"), "Id", "Name");
            return View();
        }

        [HttpPost]
        [SupportFilter]
        [ValidateInput(false)]
        public JsonResult Create(MIS_Article model)
        {
            if (model != null && ModelState.IsValid)
            {
                
                model.ChannelId = "0";
                model.Creater = GetUserId();
                model.CreateTime = ResultHelper.NowTime.ToString("yyyy-MM-dd");
                model.CheckFlag = "0";
                if (m_BLL.m_Rep.Create(model))
                {
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + model.Id + ",Title:" + model.Title, "成功", "创建", "信息中心");
                    return Json(JsonHandler.CreateMessage(1, Resource.InsertSucceed), JsonRequestBehavior.AllowGet);
                }
                else
                {
                    string ErrorCol = errors.Error;
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + model.Id + ",Title:" + model.Title + "," + ErrorCol, "失败", "创建", "信息中心");
                    return Json(JsonHandler.CreateMessage(0, Resource.InsertFail + ErrorCol), JsonRequestBehavior.AllowGet);
                }
            }
            else
            {
                return Json(JsonHandler.CreateMessage(0, Resource.InsertFail), JsonRequestBehavior.AllowGet);
            }
        }
        #endregion

        #region 修改
        [SupportFilter]
        public ActionResult Edit(string id)
        {
            
            MIS_Article entity = m_BLL.m_Rep.Find(System.Convert.ToInt32(id));
            ViewBag.Category = new SelectList(categoryBLL.m_Rep.FindList(a => a.ParentId == "0"), "Id", "Name", entity.CategoryIdParent);
            return View(entity);
        }

        [HttpPost]
        [SupportFilter]
        [ValidateInput(false)]
        public JsonResult Edit(MIS_Article model)
        {
            if (model != null && ModelState.IsValid)
            {

                if (m_BLL.m_Rep.Update(model))
                {
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + model.Id + ",Title:" + model.Title, "成功", "修改", "信息中心");
                    return Json(JsonHandler.CreateMessage(1, Resource.EditSucceed), JsonRequestBehavior.AllowGet);
                }
                else
                {
                    string ErrorCol = errors.Error;
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + model.Id + ",Title:" + model.Title + "," + ErrorCol, "失败", "修改", "信息中心");
                    return Json(JsonHandler.CreateMessage(0, Resource.EditFail + ":"+ErrorCol), JsonRequestBehavior.AllowGet);
                }
            }
            else
            {
                return Json(JsonHandler.CreateMessage(0, Resource.EditFail), JsonRequestBehavior.AllowGet);
            }
        }
        #endregion

        #region 详细
        [SupportFilter]
        public ActionResult Details(string id)
        {
            
            MIS_Article entity = m_BLL.m_Rep.Find(Convert.ToInt32(id));
            return View(entity);
        }

        #endregion

        #region 删除
    

        [HttpPost]
        [SupportFilter]
        public JsonResult Delete(string id)
        {
            if (!string.IsNullOrWhiteSpace(id))
            {
                if (m_BLL.m_Rep.Delete(Convert.ToInt32(id))>0)
                {
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + id, "成功", "删除", "信息中心");
                    return Json(JsonHandler.CreateMessage(1, Resource.DeleteSucceed));
                }
                else
                {
                    string ErrorCol = errors.Error;
                    LogHandler.WriteServiceLog(GetUserId(), "Id" + id + "," + ErrorCol, "失败", "删除", "信息中心");
                    return Json(JsonHandler.CreateMessage(0, Resource.DeleteFail + ErrorCol));
                }
            }
            else
            {
                return Json(JsonHandler.CreateMessage(0, Resource.DeleteFail));
            }


        }

        #endregion

        #region 审核/反审核
        [HttpPost]
        [SupportFilter]
        public JsonResult Check(string Id)
        {
            if (!string.IsNullOrWhiteSpace(Id))
            {

                int Flag = 1;
                if (m_BLL.Check(ref errors, Id, Flag.ToString(), GetUserId()))
                {
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + Id, "成功", "审核", "信息中心");
                    return Json(JsonHandler.CreateMessage(1, Resource.CheckSucceed));
                }
                else
                {
                    string ErrorCol = errors.Error;
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + Id + "," + ErrorCol, "失败", "审核", "信息中心");
                    return Json(JsonHandler.CreateMessage(0, Resource.CheckFail + ErrorCol));
                }
            }
            else
            {
                return Json(JsonHandler.CreateMessage(0, Resource.CheckFail));
            }
        }

        [HttpPost]
        [SupportFilter]
        public JsonResult UnCheck(string Id)
        {
            if (!string.IsNullOrWhiteSpace(Id))
            {

                int Flag = 0;
                if (m_BLL.Check(ref errors, Id, Flag.ToString(), GetUserId()))
                {
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + Id, "成功", "反审核", "信息中心");
                    return Json(JsonHandler.CreateMessage(1, Resource.UnCheckSucceed));
                }
                else
                {
                    string ErrorCol = errors.Error;
                    LogHandler.WriteServiceLog(GetUserId(), "Id:" + Id + "," + ErrorCol, "失败", "反审核", "信息中心");
                    return Json(JsonHandler.CreateMessage(0, Resource.UnCheckFail + ErrorCol));
                }
            }
            else
            {
                return Json(JsonHandler.CreateMessage(0, Resource.UnCheckFail));
            }
        }
        #endregion

    }
}

